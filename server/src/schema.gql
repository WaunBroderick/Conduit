# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Department {
  _id: MongoId!
  name: String!
  subSections: String
  organization: Organization
  admins: [User!]
}

"""Mongo ObjectId scalar type"""
scalar MongoId

type User {
  _id: MongoId!
  firstName: String!
  lastName: String!
  email: String!
  password: String!
  isAdmin: Boolean
  online: Boolean
  organization: Organization
  assignments: [Assignment!]
  departments: [Department!]
  users: User!
}

type Organization {
  _id: MongoId!
  name: String!
  address: String
  logo: String
  country: String
  users: [User!]
  departments: [Department!]
}

type Course {
  _id: MongoId!
  name: String!
  assignments: [Assignment!]!
}

type Assignment {
  _id: MongoId
  name: String
  completion: Float
  dueDate: DateTime
  organization: Organization
  course: Course
  user: User
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type LoggedUserOutput {
  """Generated access_token of the user"""
  access_token: String!

  """The returned User information"""
  user: User!
}

type Role {
  id: MongoId!
  name: String!
}

type Multiplechoice {
  """Example field (placeholder)"""
  exampleField: Int!
}

type Query {
  users: [User!]!
  usersByOrg(id: String!): [User!]!
  user(id: String!): User!
  organizations: [Organization!]!
  organization(id: String!): Organization!
  assignments: [Assignment!]!
  assignment(id: String!): Assignment!
  assignmentByUserId(id: String!): [Assignment!]!
  departments: [Department!]!
  department(id: Int!): Department!
  departmentFindByOrgId(orgId: String!): [Department!]!
  courses: [Course!]!
  course(id: Int!): Course!
  roles: [Role!]!
  role(id: Int!): Role!
  multiplechoice(id: String!): Multiplechoice!
}

type Mutation {
  createUser(input: CreateUserInput!): User!
  loginUser(loginUserInput: LoginUserInput!): LoggedUserOutput!
  createOrganization(input: CreateOrganizationInput!): Organization!
  removeOrganization(id: String!): Organization!
  createAssignment(input: CreateAssignmentInput!): Assignment!
  removeAssignment(id: String!): Assignment!
  createDepartment(input: CreateDepartmentInput!): Department!
  updateDepartment(updateDepartmentInput: UpdateDepartmentInput!): Department!
  removeDepartment(id: String!): Department!
  createCourse(input: CreateCourseInput!): Course!
  updateCourse(updateCourseInput: UpdateCourseInput!): Course!
  removeCourse(id: Int!): Course!
  createRole(createRoleInput: CreateRoleInput!): Role!
  updateRole(updateRoleInput: UpdateRoleInput!): Role!
  removeRole(id: Int!): Role!
  createMultiplechoice(createMultiplechoiceInput: CreateMultiplechoiceInput!): Multiplechoice!
  updateMultiplechoice(updateMultiplechoiceInput: UpdateMultiplechoiceInput!): Multiplechoice!
  removeMultiplechoice(id: Int!): Multiplechoice!
}

input CreateUserInput {
  _id: String
  firstName: String!
  lastName: String!
  email: String!
  password: String!
  isAdmin: Boolean
  online: Boolean
  organization: String
  assignments: String
}

input LoginUserInput {
  """email of the user"""
  email: String!

  """password of the user"""
  password: String!
}

input CreateOrganizationInput {
  _id: String
  name: String!
  address: String
  logo: String
  country: String
}

input CreateAssignmentInput {
  _id: String
  name: String
  completion: Float = 0
  dueDate: DateTime
  organization: String
  course: String
  user: String
}

input CreateDepartmentInput {
  _id: String
  name: String!
  organization: String!
  admins: String
}

input UpdateDepartmentInput {
  _id: String
  name: String
  organization: String
  admins: String
  id: Int!
}

input CreateCourseInput {
  id: String
  name: String!
}

input UpdateCourseInput {
  id: String!
  name: String
}

input CreateRoleInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateRoleInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateMultiplechoiceInput {
  """The string to become the Mongo ObjectId"""
  id: String
  name: String!
  content: String!
}

input UpdateMultiplechoiceInput {
  """The string to become the Mongo ObjectId"""
  id: String
  name: String!
  content: String
}